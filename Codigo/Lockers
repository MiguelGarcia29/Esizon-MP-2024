#include<stdio.h>
#include<string.h>
#include<stdlib.h>

typedef struct {
    int id_locker[15];
    char localidad[15][21];
    char provincia[15][21];
    char ubicacion[15][21];
    int num_compt;
    int num_compocup;
} Locker;

void id(Locker *l, int *ocupados) {
    if (*ocupados == 0) {
        l->id_locker[0] = 1;
    } else {
        for (int i = 0; i < *ocupados; i++) {
            l->id_locker[i] = i + 1;
        }
    }
    (*ocupados)++;
}

void local(Locker *l, int num) {
    printf("Dime a que localidad perteneces: \n");
    scanf("%s", l->localidad[num]);
}

void pro(Locker *l, int num) {
    printf("Dime a que provincia perteneces: \n");
    scanf("%s", l->provincia[num]);
}

void domicilio(Locker *l, int num) {
    printf("Dime a la ubicacion a la que perteneces: \n");
    scanf("%s", l->ubicacion[num]);
}

void dar_de_baja(Locker *l, int *ocupados) {
    int id_baja;
    printf("Introduce el ID del locker que quieres dar de baja: ");
    scanf("%d", &id_baja);

    int encontrado = 0;
    for (int i = 0; i < *ocupados; i++) {
        if (l->id_locker[i] == id_baja) {
            encontrado = 1;
            // Mover los lockers hacia arriba para llenar el espacio
            for (int j = i; j < *ocupados - 1; j++) {
                l->id_locker[j] = l->id_locker[j + 1];
                strcpy(l->localidad[j], l->localidad[j + 1]);
                strcpy(l->provincia[j], l->provincia[j + 1]);
                strcpy(l->ubicacion[j], l->ubicacion[j + 1]);
            }
            (*ocupados)--;
            printf("Locker dado de baja con exito.\n");
            break;
        }
    }
    if (!encontrado) {
        printf("No se encontro el ID del locker.\n");
    }
}

void acceder_contenido(Locker *l, int ocupados) {
    int id;
    printf("Introduce el ID del locker del que quieres acceder al contenido: ");
    scanf("%d", &id);

    int encontrado = 0;
    for (int i = 0; i < ocupados; i++) {
        if (l->id_locker[i] == id) {
            encontrado = 1;
            printf("Contenido del locker %d:\n", id);
            printf("Locker%03d-%s-%s-%s-15-%d",l->id_locker[i], l->localidad[i],l->provincia[i],l->ubicacion[i],ocupados);
            break;
        }
    }
    if (!encontrado) {
        printf("No se encontro el ID del locker.\n");
    }
}

int main() {
    Locker l;
    int ocupados = 0;

    while (1) {
        int opcion;
        printf("\n1. Dar de alta un nuevo locker\n");
        printf("2. Dar de baja un locker\n");
        printf("3. Acceder al contenido de un locker\n");
        printf("4. Salir\n");
        printf("Elige una opcion: ");
        scanf("%d", &opcion);

        switch (opcion) {
            case 1:
                if (ocupados < 15) {
                    local(&l, ocupados);
                    pro(&l, ocupados);
                    domicilio(&l, ocupados);
                    id(&l, &ocupados);
                    printf("Locker agregado con exito.\n");
                } else {
                    printf("Ya no se pueden agregar más lockers, el límite es 15.\n");
                }
                break;
            case 2:
                if (ocupados > 0) {
                    dar_de_baja(&l, &ocupados);
                } else {
                    printf("No hay lockers para dar de baja.\n");
                }
                break;
            case 3:
                if (ocupados > 0) {
                    acceder_contenido(&l, ocupados);
                } else {
                    printf("No hay lockers para acceder al contenido.\n");
                }
                break;
            case 4:
                printf("Saliendo del programa.\n");
                exit(0);
            default:
                printf("Opcion no valida. Por favor, elige una opcion del 1 al 4.\n");
        }
    }

    return 0;
}
