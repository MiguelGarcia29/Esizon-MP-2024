#include <stdlib.h>
#include <stdio.h>
#include <string.h>

typedef struct {
    char id_locker[11]; 
    char localidad[21];
    char provincia[21];
    char ubicacion[21];
    int num_compt; // Cambiado para representar el número máximo de lockers
    int num_compocup;
} Locker;



// La función se encarga de generar IDs en un vector de 4 dígitos.
char* id_generator(Locker *l, int tamanio_vector) {
    int id_generada = 1;

    if (tamanio_vector != 0) { // Si no hay nada en el vector, la primer id es 000001.
        id_generada = atoi(l[tamanio_vector - 1].id_locker) + 1;
        printf("Ha entrado\n");
    }

    char *id = malloc(11 * sizeof(char)); // Se aumenta el tamaño para considerar "Lock" y el carácter nulo
    if (id == NULL) {
        printf("Error al asignar memoria. \n");
        exit(EXIT_FAILURE);
    }

    char id2[5]; // Aumentar el tamaño para incluir el carácter nulo
    sprintf(id2, "%03d", id_generada); // Se cambia el formato para que genere IDs de 6 dígitos
    strcpy(id, "Lock");
    strcat(id, id2); // Concatena "Lock" con el ID generado

    return id;
}


//Procedimiento da de alta los productos.
void alta_locker(Locker *l, int* tamanio_vector){

    Locker nuevo_locker;

    printf("\nDime la localidad:");
    scanf("%s", &nuevo_locker.localidad);
    flushInputBuffer();


    printf("\Dime la provincia:");
    scanf("%s", &nuevo_locker.provincia);
	flushInputBuffer();

    printf("\nDime la direccion:");
    scanf("%s", &nuevo_locker.ubicacion);
    flushInputBuffer();

	
	printf("\nDime cuantos lockers hay en total:");
	scanf("%d", &l->num_compt);

    l->num_compocup=(*tamanio_vector)++;
 
}

void baja_locker(Locker *l , int* tamanio, char *id_baja){

    int encontrado = 0;

    for(int i = 0 ; i < *tamanio ; i++) //Comparamos la id que queremos dar de baja con las ids registradas.
    {
        if(strcmp(l[i].id_locker,id_baja) == 0){
            encontrado = 1;

        for(int j = i; j < *tamanio - 1; j++) //Reposicionamos las ids posteriores a la dada de baja.
        {
           l[j] = l[j + 1];
        }

        (*tamanio)--; //Reduzco el tamaño del array.

        printf("Producto con ID %s ha sido de baja correctamente.\n", id_baja);

        }
    }

    if(encontrado != 0){
        printf("La ID registrada no ha sido encontrada.");
    }
}
// Muestra lista de los productos, dados de alta.
void listado_locker(Locker *l, int* tamanio){

    for(int i = 0 ; i < *tamanio ; i++){

        printf("%s-%s-%s-%s-%d-%d\n", l[i].id_locker, l[i].localidad, l[i].provincia, l[i].ubicacion, l->num_compt, l->num_compocup );
    }

}
